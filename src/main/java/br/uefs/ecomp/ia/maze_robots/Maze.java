package br.uefs.ecomp.ia.maze_robots;

public class Maze {

	public static Maze[] mazes = new Maze[] {

			new Maze(new char[][] {
					/*
					###########
					#I       F#
					###########
					*/
					{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
					{ '#', 'I', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'F', '#' },
					{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
			}),
			new Maze(new char[][] {
					/*
					###########
					#I        #
					#         #
					#        F#
					###########
					*/
					{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
					{ '#', 'I', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
					{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
					{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'F', '#' },
					{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
			}),
			new Maze(new char[][] {
					/*
					###########
					#I        #
					#######   #
					  #   #
					  #   #
					  ##F##
					  #####
					*/
					{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
					{ '#', 'I', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
					{ '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', '#' },
					{ ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#' },
					{ ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#' },
					{ ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', 'F', '#', '#' },
					{ ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', '#' }
			}),
			new Maze(new char[][] {
					/*
					###########
					#F        #
					####   ####
					   #   #
					   #   #
					   ##I##
					   #####
					*/
					{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
					{ '#', 'F', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
					{ '#', '#', '#', '#', ' ', ' ', ' ', '#', '#', '#', '#' },
					{ ' ', ' ', ' ', '#', ' ', ' ', ' ', '#' },
					{ ' ', ' ', ' ', '#', ' ', ' ', ' ', '#' },
					{ ' ', ' ', ' ', '#', '#', 'I', '#', '#' },
					{ ' ', ' ', ' ', '#', '#', '#', '#', '#' }
			}),
			new Maze(new char[][] {
					/*
					###########
					#I        #
					####   ####
					#        F#
					###########
					*/
					{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
					{ '#', 'I', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
					{ '#', '#', '#', '#', ' ', ' ', ' ', '#', '#', '#', '#' },
					{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'F', '#' },
					{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
			}),
			new Maze(new char[][] {
					/*
					##############
					#I           #
					# ####  #### #
					#            #
					# ## #### ## #
					# ##      ## #
					# ## #### ## #
					#            #
					# ####  #### #
					#           F#
					##############
					*/
					{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
					{ '#', 'I', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
					{ '#', ' ', '#', '#', '#', '#', ' ', ' ', '#', '#', '#', '#', ' ', '#' },
					{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
					{ '#', ' ', '#', '#', ' ', '#', '#', '#', '#', ' ', '#', '#', ' ', '#' },
					{ '#', ' ', '#', '#', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', ' ', '#' },
					{ '#', ' ', '#', '#', ' ', '#', '#', '#', '#', ' ', '#', '#', ' ', '#' },
					{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
					{ '#', ' ', '#', '#', '#', '#', ' ', ' ', '#', '#', '#', '#', ' ', '#' },
					{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'F', '#' },
					{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
			})
	};

	public static Maze get(int index) {
		return mazes[index];
	}

	private char m[][];

	private Maze(char[][] m) {
		this.m = m;
	}

	public char[][] getMaze() {
		return m;
	}
}