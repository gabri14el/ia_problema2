package br.uefs.ecomp.ia.maze_robots;

public class Maze {

	private static final char EMPTY = ' ';
	private static final char WALL = '#';
	private static final char START = 'I';
	private static final char END = 'F';

	private static Maze[][] groupMaze = new Maze[][] {

			new Maze[] {
					/*
					#####################
					#I                  #
					#                   #
					#                   #
					#                   #
					#                   #
					#                   #
					#                   #
					#                   #
					#                  F#
					#####################
					*/
					new Maze(new char[][] {
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
							{ '#', 'I', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'F', '#' },
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
					}),

					/*
					#####################
					#I                  #
					#                   #
					#                   #
					#                   #
					#         F         #
					#                   #
					#                   #
					#                   #
					#                   #
					#####################
					*/
					new Maze(new char[][] {
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
							{ '#', 'I', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'F', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
					}),

					/*
					#####################
					#F                  #
					#                   #
					#                   #
					#                   #
					#                   #
					#                   #
					#                   #
					#                   #
					#                  I#
					#####################
					*/
					new Maze(new char[][] {
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
							{ '#', 'F', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'I', '#' },
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
					})
			},
			new Maze[] {
					/*
					#####################
					#I                  #
					#         #         #
					#         #         #
					#         #F        #
					# ################# #
					#         #         #
					#         #         #
					#         #         #
					#                   #
					#####################
					*/
					new Maze(new char[][] {
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
							{ '#', 'I', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', 'F', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
					}),

					/*
					#####################
					#I                  #
					#         #         #
					#         #         #
					#         #         #
					# ################# #
					#         #F        #
					#         #         #
					#         #         #
					#                   #
					#####################
					*/
					new Maze(new char[][] {
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
							{ '#', 'I', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', 'F', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
					}),

					/*
					#####################
					#F                  #
					#         #         #
					#         #         #
					#         #         #
					# ################# #
					#         #I        #
					#         #         #
					#         #         #
					#                   #
					#####################
					*/
					new Maze(new char[][] {
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
							{ '#', 'F', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', 'I', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
					})
			},
			new Maze[] {
					/*
					############
					#I        F#
					####    ####
					#          #
					############
					*/
					new Maze(new char[][] {
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
							{ '#', 'I', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'F', '#' },
							{ '#', '#', '#', '#', ' ', ' ', ' ', ' ', '#', '#', '#', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
					}),

					/*
					############
					#I         #
					####    ####
					#         F#
					############
					*/
					new Maze(new char[][] {
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
							{ '#', 'I', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', '#', '#', '#', ' ', ' ', ' ', ' ', '#', '#', '#', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'F', '#' },
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
					}),

					/*
					############
					#F         #
					####    ####
					#I         #
					############
					*/
					new Maze(new char[][] {
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
							{ '#', 'F', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', '#', '#', '#', ' ', ' ', ' ', ' ', '#', '#', '#', '#' },
							{ '#', 'I', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
					})
			},
			new Maze[] {
					/*
					##############
					#I           #
					# ####  #### #
					#            #
					# ## #### ## #
					# ##      ## #
					# ## #### ## #
					#            #
					# ####  #### #
					#           F#
					##############
					*/
					new Maze(new char[][] {

							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
							{ '#', 'I', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', '#', '#', '#', '#', ' ', ' ', '#', '#', '#', '#', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', '#', '#', ' ', '#', '#', '#', '#', ' ', '#', '#', ' ', '#' },
							{ '#', ' ', '#', '#', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', ' ', '#' },
							{ '#', ' ', '#', '#', ' ', '#', '#', '#', '#', ' ', '#', '#', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', '#', '#', '#', '#', ' ', ' ', '#', '#', '#', '#', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'F', '#' },
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
					}),
					/*
					##############
					#I           #
					# ####  #### #
					#            #
					# ## #### ## #
					# ##   F  ## #
					# ## #### ## #
					#            #
					# ####  #### #
					#            #
					##############
					*/
					new Maze(new char[][] {

							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
							{ '#', 'I', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', '#', '#', '#', '#', ' ', ' ', '#', '#', '#', '#', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', '#', '#', ' ', '#', '#', '#', '#', ' ', '#', '#', ' ', '#' },
							{ '#', ' ', '#', '#', ' ', ' ', ' ', 'F', ' ', ' ', '#', '#', ' ', '#' },
							{ '#', ' ', '#', '#', ' ', '#', '#', '#', '#', ' ', '#', '#', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', '#', '#', '#', '#', ' ', ' ', '#', '#', '#', '#', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
					}),
					/*
					##############
					#F           #
					# ####  #### #
					#            #
					# ## #### ## #
					# ##   I  ## #
					# ## #### ## #
					#            #
					# ####  #### #
					#            #
					##############
					 */
					new Maze(new char[][] {

							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
							{ '#', 'F', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', '#', '#', '#', '#', ' ', ' ', '#', '#', '#', '#', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', '#', '#', ' ', '#', '#', '#', '#', ' ', '#', '#', ' ', '#' },
							{ '#', ' ', '#', '#', ' ', ' ', ' ', 'I', ' ', ' ', '#', '#', ' ', '#' },
							{ '#', ' ', '#', '#', ' ', '#', '#', '#', '#', ' ', '#', '#', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', '#', '#', '#', '#', ' ', ' ', '#', '#', '#', '#', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
					}),
			},
			new Maze[] {
					/*
					#####################
					#I                  #
					# ######## ######## #
					# #               # #
					# # ############# # #
					# #               # #
					# # ############# # #
					# #               # #
					# ######## ######## #
					#                  F#
					#####################
					*/
					new Maze(new char[][] {
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
							{ '#', 'I', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#' },
							{ '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#' },
							{ '#', ' ', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#' },
							{ '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#' },
							{ '#', ' ', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#' },
							{ '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#' },
							{ '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'F', '#' },
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
					}),

					/*
					#####################
					#I                  #
					# ######## ######## #
					# #               # #
					# # ############# # #
					# #               # #
					# # ############# # #
					# #              F# #
					# ######## ######## #
					#                   #
					#####################
					*/
					new Maze(new char[][] {
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
							{ '#', 'I', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#' },
							{ '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#' },
							{ '#', ' ', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#' },
							{ '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#' },
							{ '#', ' ', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#' },
							{ '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'F', '#', ' ', '#' },
							{ '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
					}),

					/*
					#####################
					#I                  #
					# ######## ######## #
					# #               # #
					# # ############# # #
					# #       F       # #
					# # ############# # #
					# #               # #
					# ######## ######## #
					#                   #
					#####################
					*/
					new Maze(new char[][] {
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
							{ '#', 'I', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#' },
							{ '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#' },
							{ '#', ' ', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#' },
							{ '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'F', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#' },
							{ '#', ' ', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#' },
							{ '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#' },
							{ '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#' },
							{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
							{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
					})
			}
	};

	public static Maze[] getGroup(int index) {
		return groupMaze[index];
	}

	private static int ID_GENERATION = 0;

	protected long id = ++ID_GENERATION;;
	private final char maze[][];
	private int sY;
	private int sX;
	private int eY;
	private int eX;
	private int emptyPositions;

	private Maze(char[][] maze) {
		this.maze = maze;
		sY = -1;
		sX = -1;
		eY = -1;
		eX = -1;

		emptyPositions = 0;
		for (int y = 0; y < getYLength(); y++) {
			for (int x = 0; x < getXLength(); x++) {
				if (isEmpty(y, x))
					emptyPositions++;
				if (maze[y][x] != EMPTY && maze[y][x] != WALL && maze[y][x] != START && maze[y][x] != END)
					throw new RuntimeException("Labirinto com posicao inválida: " + maze[y][x]);

				if (maze[y][x] == START) {
					sY = y;
					sX = x;
				}

				if (maze[y][x] == END) {
					eY = y;
					eX = x;
				}
			}
		}

		if (sY == -1)
			throw new RuntimeException("Labirinto sem inicio");
		if (eY == -1)
			throw new RuntimeException("Labirinto sem fim");
	}

	public long getId() {
		return id;
	}

	public char[][] getMaze() {
		return maze;
	}

	public int getYLength() {
		return maze.length;
	}

	public int getXLength() {
		return maze[0].length;
	}

	public int getSY() {
		return sY;
	}

	public int getSX() {
		return sX;
	}

	public int getEY() {
		return eY;
	}

	public int getEX() {
		return eX;
	}

	public char get(int y, int x) {
		return maze[y][x];
	}

	public boolean isEmpty(int y, int x) {
		return maze[y][x] != WALL;
	}

	public boolean isWall(int y, int x) {
		return maze[y][x] == WALL;
	}

	public boolean isStart(int y, int x) {
		return maze[y][x] == START;
	}

	public boolean isEnd(int y, int x) {
		return maze[y][x] == END;
	}

	public int getEmptyPositions() {
		return emptyPositions;
	}

	@Override
	public String toString() {
		return "Maze [id=" + id + "]";
	}
}
